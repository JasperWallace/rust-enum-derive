var searchIndex = {};
searchIndex['rust_enum_derive'] = {"items":[[0,"","rust_enum_derive","",null,null],[3,"FileArgs","","Arguments for how to process() an input file.",null,null],[12,"name","","the enum name (Name if not specified)",0,null],[12,"derive","","Which traits to derive. Ex: \"Debug, PartialEq\"",0,null],[12,"define","","parse C #define input instead of enum",0,null],[12,"default","","implement the Default trait with the first value",0,null],[12,"display","","implement the std::fmt::Display trait",0,null],[12,"fromprimative","","implement the num::traits::FromPrimitive trait",0,null],[12,"fromstr","","implement the std::str::FromStr trait",0,null],[12,"hex","","hexadecimal output",0,null],[12,"pretty_fmt","","implement pretty_fmt()",0,null],[5,"process","","This is the function that you call to process one file (Enum) worth of data.",null,{"inputs":[{"name":"option"},{"name":"option"},{"name":"fileargs"}],"output":{"name":"result"}}],[5,"traverse_dir","","This is the function that you call to process a whole directory heirarcy full of files.",null,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"fileargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[{"name":"fileargs"}],"output":{"name":"fileargs"}}]],"paths":[[3,"FileArgs"]]};
initSearch(searchIndex);
